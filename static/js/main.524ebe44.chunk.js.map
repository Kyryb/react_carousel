{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","itemsAmount","length","lastItemCoordX","useState","coordX","setCoordX","firstItemIndex","setFirstItemIndex","useEffect","className","style","width","map","image","transform","transitionDuration","src","alt","indexOf","height","type","onClick","nextCoordX","cn","nextXCoords","App","state","handleStateChange","field","event","setState","prevState","target","value","checked","this","action","htmlFor","id","name","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524ebe44.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport cn from \"classnames\";\nimport \"./Carousel.scss\";\nimport { State } from \"../types\";\n\nconst Carousel: React.FC<State> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const itemsAmount = images.length;\n  const startItemCoordX = 0;\n  const lastItemCoordX: number = -((images.length - frameSize) * itemWidth);\n  const [coordX, setCoordX] = useState(startItemCoordX);\n  const [firstItemIndex, setFirstItemIndex] = useState(0);\n\n  useEffect(() => {\n    setCoordX(startItemCoordX - firstItemIndex * itemWidth);\n  }, [itemWidth]);\n\n  useEffect(() => {\n    setCoordX(startItemCoordX);\n    setFirstItemIndex(0);\n  }, [frameSize]);\n\n  const handlePrevFrame = () => {\n    const nextCoordX = itemWidth * step + coordX;\n\n    if (nextCoordX < startItemCoordX) {\n      setCoordX(nextCoordX);\n      setFirstItemIndex(firstItemIndex - frameSize);\n    } else if (coordX === startItemCoordX && infinite) {\n      setCoordX(lastItemCoordX);\n      setFirstItemIndex(itemsAmount - frameSize);\n    } else {\n      setCoordX(startItemCoordX);\n      setFirstItemIndex(0);\n    }\n  };\n\n  const handleNextFrame = () => {\n    const nextXCoords = coordX - itemWidth * step;\n\n    if (nextXCoords > lastItemCoordX) {\n      setCoordX(nextXCoords);\n      setFirstItemIndex(firstItemIndex + frameSize);\n    } else if (coordX === lastItemCoordX && infinite) {\n      setCoordX(startItemCoordX);\n      setFirstItemIndex(0);\n    } else {\n      setCoordX(lastItemCoordX);\n      setFirstItemIndex(itemsAmount - frameSize);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: frameSize * itemWidth,\n        }}\n      >\n        {images.map((image) => {\n          return (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${coordX}px)`,\n                transitionDuration: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${images.indexOf(image) + 1}`}\n                style={{\n                  width: itemWidth,\n                  height: itemWidth,\n                }}\n              />\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={handlePrevFrame}\n          className={cn(\"Carousel__btn\", {\n            \"Carousel__btn--disabled\": coordX === startItemCoordX && !infinite,\n          })}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleNextFrame}\n          className={cn(\"Carousel__btn\", {\n            \"Carousel__btn--disabled\": coordX === lastItemCoordX && !infinite,\n          })}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Carousel from \"./components/Carousel\";\nimport { State } from \"./types\";\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      \"./img/1.png\",\n      \"./img/2.png\",\n      \"./img/3.png\",\n      \"./img/4.png\",\n      \"./img/5.png\",\n      \"./img/6.png\",\n      \"./img/7.png\",\n      \"./img/8.png\",\n      \"./img/9.png\",\n      \"./img/10.png\",\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  // prettier-ignore\n  handleStateChange = (field: string) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      [field]: +event.target.value || event.target.checked,\n    }));\n  };\n\n  render() {\n    // prettier-ignore\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite\n    }= this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <form action=\"\" className=\"App__carousel-opt-form\">\n          <div className=\"App__carousel-opt-form-field\">\n            <label htmlFor=\"step\">Enter Desired Step: </label>\n            <input\n              className=\"App__carousel-opt-form-field-input\"\n              id=\"item-step\"\n              name=\"item-step\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              value={step}\n              onChange={this.handleStateChange(\"step\")}\n            />\n          </div>\n          <div className=\"App__carousel-opt-form-field\">\n            <label htmlFor=\"frame-size\">Enter Desired Frame Size: </label>\n            <input\n              className=\"App__carousel-opt-form-field-input\"\n              id=\"frame-size\"\n              name=\"frame-size\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              value={frameSize}\n              onChange={this.handleStateChange(\"frameSize\")}\n            />\n          </div>\n          <div className=\"App__carousel-opt-form-field\">\n            <label htmlFor=\"item-width\">Enter Desired Frame Size: </label>\n            <input\n              className=\"App__carousel-opt-form-field-input\"\n              id=\"item-width\"\n              name=\"item-width\"\n              type=\"number\"\n              min=\"10\"\n              step=\"10\"\n              value={itemWidth}\n              onChange={this.handleStateChange(\"itemWidth\")}\n            />\n          </div>\n          <div className=\"App__carousel-opt-form-field\">\n            <label htmlFor=\"animation-duration\">\n              Enter Desired Animation Duration Time (in ms):\n            </label>\n            <input\n              className=\"App__carousel-opt-form-field-input\"\n              id=\"animation-duration\"\n              name=\"animation-duration\"\n              type=\"number\"\n              min=\"0\"\n              step=\"500\"\n              value={animationDuration}\n              onChange={this.handleStateChange(\"animationDuration\")}\n            />\n          </div>\n          <div className=\"App__carousel-opt-form-field\">\n            <label htmlFor=\"is-infinite\">Infinite flag:</label>\n            <input\n              className=\"App__carousel-opt-form-field-input\"\n              id=\"is-infinite\"\n              name=\"is-infinite\"\n              type=\"checkbox\"\n              onChange={this.handleStateChange(\"infinite\")}\n            />\n          </div>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}